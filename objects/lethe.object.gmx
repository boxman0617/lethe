<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>lethel_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>my_head = instance_create(self.x, self.y, lethe_head);
my_body = instance_create(self.x, self.y, lethe_body);

// Creating player variables
max_life = 4;
life = 4;

mspeed = 2;

isMoving = false;
isAttacking = false;
canAttack = true;
canBeDamaged = true;
flashCounter = 0;

equiptWeapon = "stick";


facing = 6; // Down
facingDir = "down";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flashCounter = 0;
canBeDamaged = true;

with(my_head) {
    image_alpha = 1.0;
}
with(my_body) {
    image_alpha = 1.0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(life &lt;= 0) {
    game_restart(); // @ToDo
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vx = (keyboard_check(Keys.move_key_right) - keyboard_check(Keys.move_key_left)) * 2;
var vy = (keyboard_check(Keys.move_key_down) - keyboard_check(Keys.move_key_up)) * 2;

if(vx != 0 || vy != 0) {
    facing = round(point_direction(0, 0, vx, vy) / 45) mod 8;
    var didMove = false;
    
    if(place_free(x, y + (vy * mspeed))) {
        y += vy * mspeed;
        didMove = true;
    }
    if(place_free(x + (vx * mspeed), y)) {
        x += vx * mspeed;
        didMove = true;
    }
    
    if(didMove) {
        isMoving = true;
    }
} else {
    isMoving = false;
}

if(equiptWeapon == "stick") {
    if(!instance_exists(stick)) {
        instance_create(x, y, stick);
    }
}

if(facing == 0) {
    facingDir = "right";
} else if(facing &gt; 0 &amp;&amp; facing &lt; 4) {
    facingDir = "up";
} else if(facing == 4) {
    facingDir = "left";
} else {
    facingDir = "down";
}

if(keyboard_check(Keys.attack_key) &amp;&amp; canAttack) {
    canAttack = false;
    switch(equiptWeapon) {
        case "stick":
            stick.image_index = 0;
            stick.canCauseDamage = true;
            if(facingDir == "down") {
                stick.sprite_index = attack_stick_down;
            } else if(facingDir == "up") {
                stick.sprite_index = attack_stick_up;
            } else if(facingDir == "left") {
                stick.sprite_index = attack_stick_left;
            } else if(facingDir == "right") {
                stick.sprite_index = attack_stick_right;
            }
            break;
    }
}

if(canBeDamaged == false) {
    if(flashCounter mod 2 == 0) {
        with(my_head) {
            if(image_alpha == 1.0) {
                image_alpha = 0.3;
            } else {
                image_alpha = 1.0;
            }
        }
        with(my_body) {
            if(image_alpha == 1.0) {
                image_alpha = 0.3;
            } else {
                image_alpha = 1.0;
            }
        }
    }
    
    flashCounter++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="enemy_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canBeDamaged) {
    life--;
    canBeDamaged = false;
}

var offset = 40;
var fallBackSpeed = 4;
var dir = point_direction(x, y, other.x, other.y);
var xDir = lengthdir_x(offset, dir);
var yDir = lengthdir_y(offset, dir);

var endX = x - xDir;
var endY = y - yDir;

move_towards_point(endX, endY, fallBackSpeed);

alarm[0] = 5; // Stop pushback
alarm[1] = room_speed; // Flashing end
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
